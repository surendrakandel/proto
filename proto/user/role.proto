syntax = "proto3";

package user;
option go_package = "github.com/surendrakandel/grpcauth/server/v1/user";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "opts/page.proto";

service Role {
    // create request to apply current user as Business owner. Business can have only one owner
  rpc ApplyBusinessOwner(ApplyBusinessOwnerRequest) returns (ApplyBusinessOwnerResponse) {
    option (google.api.http) = {
      post: "/v1/role/applyBusinessOwner"
      body: '*'
    };
  }
  rpc VerifyBusinessOwner(VerifyBusinessOwnerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/role/verifyBusinesOwner"
      body: '*'
    };
  }
  // only owner can set admins (up to 50)
  rpc AddBusinessAdmin(AddBusinessAdminRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/role/addBusinessAdmin"
      body: '*'
    };
  }
  rpc RemoveBusinessAdmin(RemoveBusinessAdminRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/role/removeBusinessAdmin"
    };
  }
  // company owner can move self owner-role to another user. this action is irreversible
  rpc SetCompanyOwner(SetBusinessOwnerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/role/setCompanyOwner"
      body: '*'
    };
  }
  rpc GetManagers(GetManagersRequest) returns (GetManagersResponse) {
    option (google.api.http) = {
      get: "/v1/role/getManagers"
    };
  }
  rpc CanEditBusiness(CanEditBusinessRequest) returns (CanEditBusinessResponse) {};
  // where current user is owner or admin
  rpc GetOwnBusinesses(GetOwnBusinessesRequest) returns (GetOwnBusinessesResponse) {};
}

enum Grant {
  NONE = 0;
  OWNER = 2;
  ADMIN = 3;
  STAFF = 4;
  CASHIER = 5;
};

message GetOwnBusinessesRequest {
    string user_id = 1;
    opts.SkipLimit opts = 2;
   
}
  
message GetOwnBusinessesResponse {
    repeated string business_ids = 1;
}
  
message GetManagersRequest {
    string business_id = 1;
    opts.SkipLimit opts = 2;
    
}

message ManagerItem {
    string id = 1;
    string first_name = 2;
    string midddle_name= 3;
    string last_name = 4;
    string photo = 5;
    Grant grant = 6;
}
  
message GetManagersResponse {
    repeated ManagerItem managers = 1;
}
  
message CanEditBusinessRequest {
    string business_id = 1;
    string user_id = 2;
}

message CanEditBusinessResponse {
    bool can_edit = 1;
}

message AddBusinessAdminRequest {
    string business_id = 1;
    string user_id = 2;
}

message RemoveBusinessAdminRequest {
    string business_id = 1;
    string user_id = 2;
}

message SetBusinessOwnerRequest {
    string business_id = 1;
    string user_id = 2;
}

// example.com
message ApplyBusinessOwnerRequest {
    string business_id = 1;
}

// example.com
message VerifyBusinessOwnerRequest {
    string business_id = 1;
}

message ApplyBusinessOwnerResponse {
    string meta_name = 1;
    string meta_content = 2;
}

message SetBusinessAdminRequest {
    string business_id = 1;
    string user_id = 2;
}
