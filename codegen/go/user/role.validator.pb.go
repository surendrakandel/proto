// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user/role.proto

package user

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "github.com/surendrakandel/proto/codegen/go/opts"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetOwnBusinessesRequest) Validate() error {
	if this.Opts != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Opts); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Opts", err)
		}
	}
	return nil
}
func (this *GetOwnBusinessesResponse) Validate() error {
	return nil
}
func (this *GetManagersRequest) Validate() error {
	if this.Opts != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Opts); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Opts", err)
		}
	}
	return nil
}
func (this *ManagerItem) Validate() error {
	return nil
}
func (this *GetManagersResponse) Validate() error {
	for _, item := range this.Managers {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Managers", err)
			}
		}
	}
	return nil
}
func (this *CanEditBusinessRequest) Validate() error {
	return nil
}
func (this *CanEditBusinessResponse) Validate() error {
	return nil
}
func (this *AddBusinessAdminRequest) Validate() error {
	return nil
}
func (this *RemoveBusinessAdminRequest) Validate() error {
	return nil
}
func (this *SetBusinessOwnerRequest) Validate() error {
	return nil
}
func (this *ApplyBusinessOwnerRequest) Validate() error {
	return nil
}
func (this *VerifyBusinessOwnerRequest) Validate() error {
	return nil
}
func (this *ApplyBusinessOwnerResponse) Validate() error {
	return nil
}
func (this *SetBusinessAdminRequest) Validate() error {
	return nil
}
